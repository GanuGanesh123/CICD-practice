import requests
import json
import os

def call_gemini_api(prompt: str, api_key: str, model_name: str = "gemini-2.5-flash-preview-05-20"):
   
    if not api_key:
        return "Error: API key is missing. Please provide your Google Cloud API key."

    # Gemini API endpoint for text generation
    api_url = f"https://generativelanguage.googleapis.com/v1beta/models/{model_name}:generateContent?key={api_key}"

    payload = {
        "contents": [
            {"role": "user", "parts": [{"text": prompt}]}
        ]
    }
    headers = {
        "Content-Type": "application/json"
    }

    print(f"Sending request to Gemini API...")
    response = requests.post(api_url, headers=headers, data=json.dumps(payload))
    response.raise_for_status() # Raise an HTTPError for bad responses (4xx or 5xx)

    # Parse the JSON response
    result = response.json()

    # Extract the generated text
    if result.get("candidates") and len(result["candidates"]) > 0:
        first_candidate = result["candidates"][0]
        if first_candidate.get("content") and first_candidate["content"].get("parts"):
            if len(first_candidate["content"]["parts"]) > 0:
                return first_candidate["content"]["parts"][0].get("text", "No text part found in response.")
    return "No valid text generated by the model." # Fallback if structure is unexpected

       


# --- How to use this function ---
if __name__ == "__main__":

    api_key = os.environ["GOOGLE_API_KEY"]

    user_prompt = "where is Gannon University?"
    response_text = call_gemini_api(user_prompt, api_key)        

    print("\n--- Gemini's Response ---")
    print(response_text)

    print("\n--- Another Example ---")
    user_prompt_2 = "How to learn LLms pratically?"

    response_text_2 = call_gemini_api(user_prompt_2, api_key)
    print("\n--- Gemini's Response ---")
    print(response_text_2)